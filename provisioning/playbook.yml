---
- hosts: all
  become: yes
  gather_facts: no

  vars:
    dbname: dev
    dbuser: vagrant
    dbpassword: vagrant

  handlers:
    - name: restart postgresql
      service: name=postgresql state=restarted

  tasks:
  - name: Install packages
    apt: pkg={{ item }} state=present update_cache=yes
    with_items:
      - python3.4
      - python3-pip
      - python3.4-venv
      - git

  - name: add keyserver to apt
    command: apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
  - name: add custom postgres repo to apt
    lineinfile: dest=/etc/apt/sources.list.d/pgdg.list
                line="deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main" state=present
                create=yes

  - name: ensure apt cache is up to date
    apt: update_cache=yes
  - name: ensure packages are installed
    apt: name={{item}}
    with_items:
        - python-software-properties
        - software-properties-common
        - libpq-dev
        - python-psycopg2
        - postgresql-9.4

  - name: Install requirements.txt
    pip: requirements=/vagrant/requirements.txt executable=pip3

  - name: Update virtualenv
    pip: requirements=/vagrant/requirements.txt virtualenv_command=pyvenv-3.4 virtualenv=/vagrant/venv executable=pip3

  - name: update bash_profile to start virtualenv
    shell: echo "source /vagrant/venv/bin/activate" >> .bash_profile

  - name: postgresql should listen on all ports
    lineinfile: dest=/etc/postgresql/9.4/main/postgresql.conf
                regexp="^listen_addresses"
                line="listen_addresses = '*'" state=present
    become_user: postgres
    
  - name: postgresql should allow access to host
    copy:
      dest: /etc/postgresql/9.4/main/pg_hba.conf
      content: |
        local   all   postgres   peer
        local   all   all        peer
        host    all   all        0.0.0.0/0   md5
    notify: restart postgresql
    become_user: postgres

  - name: ensure database is created
    postgresql_db: name={{dbname}}
    become_user: postgres

  - name: ensure user has access to database
    postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL
    become_user: postgres

  - name: Go to vangrant folder
    shell: echo "cd /vagrant" >> .bash_profile

  - name: Add env var to indicate that the app is running in the dev environment
    shell: echo "export LOCAL_DEV=True" >> .bash_profile

  - name: Add env var indicating the port used by the app in the dev environment
    shell: echo "export PORT=8000" >> .bash_profile
